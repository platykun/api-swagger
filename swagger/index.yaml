swagger: '2.0'
info:
  version: '0.0.1'
  title: MARUCH スマホ向けAPI
  description: MARUCH スマホ向けのAPIを提供する

# アドレス設定
host: maruchi.herokuapp.com
basePath:
schemes:
  - https


securityDefinitions:
  application:
    type: oauth2
    # This should be updated to the Token URL of your OAuth provider.
    tokenUrl: http://example.com/oauth/token
    flow: application
    scopes:
      write: allows modifying resources
      read: allows reading resources

security:
  - application:
      - read
      - write
paths:
  /users/me:
    get:
      summary: ログインユーザのユーザ情報を取得する
      description: ログインユーザのユーザ情報を取得する
      parameters:
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
    put:
      summary: ログインユーザのユーザ情報を更新する
      description: ユーザを作成する。作成済みのユーザ情報を返却する
      parameters:
        - name: user
          in: body
          type: object
          schema:
            $ref: '#/definitions/RequestUser'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
  /users/add:
    post:
      summary: ユーザを作成する
      description: ユーザを作成する。作成済みのユーザ情報を返却する
      parameters:
        - name: user
          in: body
          schema:
            $ref: '#/definitions/RequestUser'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
  /lunches/{id}:
    get:
      summary: ランチの詳細情報を取得する
      description: ランチの詳細情報を取得する
      parameters:
        - name: id
          in: path
          description: ランチID
          type: integer
          required: true
          format: int64
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Lunch'
  /lunches/list:
    post:
      summary: ランチの一覧を取得する
      description: リクエストパラメータが複雑になることが見込まれるためGETではなくPOSTとして定義。
      parameters:
        - name: parameter
          in: body
          schema:
            $ref: '#/definitions/LunchListSearchProperties'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              description: ランチ情報
              $ref: '#/definitions/Lunch'
  /lunches/add:
    post:
      summary: ランチを追加する
      description: ランチを追加する
      parameters:
        - name: lunch
          in: body
          schema:
            $ref: '#/definitions/Lunch'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Lunch'
  /favorites:
    get:
      summary: ログインユーザのお気に入りランチ一覧を取得する
      parameters:
        - in: query
          name: count
          type: number
          default: 20
          minimum: 1
          maximum: 100
          description: 返却するデータのサイズ。
        - in: query
          name: cursor
          type: number
          default: 1
          minimum: 1
          maximum: 100
          description: 取得するデータのページ数。
      responses:
        200:
          description: お気に入りランチ一覧
          schema:
            type: array
            items:
              description: お気に入り済情報
              $ref: '#/definitions/Favorite'

definitions:
  SearchProperties:
    type: object
    properties:
      count:
        type: number
        default: 20
        minimum: 1
        maximum: 100
        description: 返却するデータのサイズ。
      cursor:
        type: number
        default: 1
        minimum: 1
        maximum: 100
        description: 取得するデータのページ数。
  LunchListSearchProperties:
    type: object
    properties:
      page:
        $ref: '#/definitions/SearchProperties'
      sort:
        description: レスポンスの表示順を指定。
        type: array
        items:
          type: string
          enum: [value, lipid, random]
      price:
        description: 値段の範囲
        $ref: '#/definitions/IntegerRange'
      lipid:
        description: 脂質の範囲
        $ref: '#/definitions/IntegerRange'
  Lunch:
    type: "object"
    properties:
      id:
        description: ID
        type: integer
        example: 1
      imageUrl:
        description: ランチ画像のURL
        type: string
        example: google.com
      creator:
        description: 作成者
        $ref: '#/definitions/User'
      shop:
        description: 店舗情報
        $ref: '#/definitions/Shop'
      price:
        description: 値段
        type: integer
        example: 1200
      detail:
        description: ランチの詳細情報。画像解析の結果が格納されている
        $ref: '#/definitions/LunchDetail'
  LunchDetail:
    type: object
    properties:
      calorie:
        description: カロリー
        type: number
        example: 162
      carbohydrate:
        description: 炭水化物
        type: integer
        excample: 21.9
      description:
        description: ランチの詳細情報
        type: string
        example: 1枚分 メープルシロップバター付
      fiber:
        description: 食物繊維
        type: number
        example: 0.4
      label:
        description: ラベル
        type: string
        example: パンケーキ
      lipid:
        description: 脂質
        type: number
        example: 6.5
      protein:
        description: タンパク質
        type: number
        example: 3.1
      salt:
        description: 塩分
        type: number
        example: 0.2
  RequestUser:
    description: ユーザ情報
    properties:
      name:
        description: ユーザ名
        type: string
        example: alice
      sex:
        description: 性別
        type: string
        enum: [man, woman, other]
        example: woman
      birth:
        description: 誕生年月日(yyyy-mm-dd)
        type: string
        example: 1992-12-11
  User:
    description: ユーザ情報
    properties:
      id:
        description: ユーザID
        type: integer
        example: 1
      name:
        description: ユーザ名
        type: string
        example: alice
      sex:
        description: 性別
        type: string
        enum: [man, woman, other]
        example: woman
      birth:
        description: 誕生年月日(yyyy-mm-dd)
        type: string
        example: 1992-12-11
  Shop:
    description: 店舗情報の概要
    properties:
      id:
        description: 店舗ID
        type: integer
        example: 1
      name:
        description: 店舗名
        type: string
        example: 完全個室居酒屋 初代鳥万作 東京八重洲店
      name_kana:
        description: 店舗名読み
        type: string
        example: カンゼンコシツイザカヤショダイトリマンサク トウキョウヤエステン
      tel:
        description: 電話番号
        type: string
        example: 050-1234-5678
      address:
        description: 住所
        type: string
        example: 〒103-0028 東京都中央区八重洲1-7-10 1F
      opentime:
        description: 営業時間
        type: string
        example: 月～金 昼食　11:30～14:00（L.O.13:30、ドリンクL.O.13:30）毎日ランチタイムを行っております。・・・
      holiday:
        description: 休業日
        type: string
        example: 年中無休 定休日はございません。平日や休日なども休まず営業いたします。金曜や祝前日は朝5時まで営業いたします！
      url:
        $ref: '#/definitions/GurunabiUrl'
  GurunabiUrl:
    description: ぐるなびサイトのURL
    properties:
      pc_url:
        description: PCサイトURL
        type: string
        example: https://r.gnavi.co.jp/dnj1y43c0000/
      mobile_url:
        description: スマホサイトURL
        type: string
        example: https://r.gnavi.co.jp/dnj1y43c0000/
  IntegerRange:
    description: 値の範囲を指定
    properties:
      min:
        description: 最小値
        type: integer
        example: 1
      max:
        description: 最大値
        type: integer
        example: 1000
  Favorite:
    description: お気に入りランチ情報
    type: "object"
    properties:
      lunchId:
        description: ランチID
        type: integer
        example: 1001
      date:
        description: お気に入り日時(JST)
        type: string
        format: 'date-time'
        example: 2019-11-17 12:00:00
